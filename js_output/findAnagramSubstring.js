"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Category: STRINGS
 * Tags: maps anagrams
 *
 * Given a string S and a smaller string T, check if an anagram of T exists in S.
 */
var assert = require("assert");
var Solver = /** @class */ (function () {
    function Solver(s) {
        this.text = s;
    }
    Solver.prototype.hasAnagramSubstring = function (pattern) {
        if (pattern.length === 0)
            return false; // <-- This might not be the correct way to handle empty patterns
        if (pattern === this.text)
            return true;
        var patternCounts = new Map();
        var windowCounts = new Map();
        for (var i = 0; i < pattern.length; i++) {
            var pChar = pattern[i];
            if (!patternCounts.has(pChar))
                patternCounts.set(pChar, 0);
            patternCounts.set(pChar, patternCounts.get(pChar) + 1);
            var tChar = this.text[i];
            if (!windowCounts.has(tChar))
                windowCounts.set(tChar, 0);
            windowCounts.set(tChar, windowCounts.get(tChar) + 1);
        }
        // console.log(patternCounts);
        for (var i = pattern.length; i < this.text.length; i++) {
            if (this.isComplete(patternCounts, windowCounts))
                return true;
            var newChar = this.text[i];
            var firstChar = this.text[i - pattern.length];
            if (!windowCounts.has(newChar))
                windowCounts.set(newChar, 0);
            windowCounts.set(newChar, windowCounts.get(newChar) + 1);
            windowCounts.set(firstChar, windowCounts.get(firstChar) - 1);
        }
        return this.isComplete(patternCounts, windowCounts);
    };
    Solver.prototype.isComplete = function (pCounts, windowCounts) {
        // console.log(windowCounts);
        var e_1, _a;
        try {
            for (var _b = __values(Array.from(pCounts.entries())), _c = _b.next(); !_c.done; _c = _b.next()) {
                var pair = _c.value;
                var char = pair[0];
                var count = pair[1];
                if (count !== windowCounts.get(char))
                    return false;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return true;
    };
    return Solver;
}());
var solver = new Solver("asasfasasdfaa");
assert(solver.hasAnagramSubstring("sad"));
assert(solver.hasAnagramSubstring("saf"));
assert(!solver.hasAnagramSubstring("sass"));
assert(solver.hasAnagramSubstring("f"));
assert(solver.hasAnagramSubstring("ssaaafsadsaaf"));
assert(solver.hasAnagramSubstring("afa"));
assert(solver.hasAnagramSubstring("sasfas"));
var fastTester = new Solver("aksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsfaksdfhkjasdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbhqwhsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashdusdfalksjdflkadsjfklahjkheghahskjdhgjhasndkbaspdfasdfhkjawhegashduerurofdasdlkfhaksjdfhkahsdkhaskjdvkjaskdkrhkasiefhahsdjkfjasjdfhhashdfkakjshdfhkaweogasdgfpasoieuaiowhfkajskdfspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbfweiufhkajfakjsf");
assert(!fastTester.hasAnagramSubstring("wwei"));
assert(fastTester.hasAnagramSubstring("asd"));
assert(fastTester.hasAnagramSubstring("dfsuewjewberurofdspsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvdmkvdmsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvdmvjdshdfsuewjewbsdfhkjawhegashduerurofdspvdmkvd"));
console.log("All assertions passed.");
